name: Rust Build

on:
  push:
    tags:
      - '*'
  pull_request:
    branches: [ rust ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v2
      - name: 📦 Warm up downloads
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: 🎯 Warm up targets
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('./Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: 🏗️ Build
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-gnu

      - name: ✂️ Strip Debug Symbols
        if: startsWith(github.ref, 'refs/tags/')
        run: strip -s target/x86_64-unknown-linux-gnu/release/ally-steam-patch

      - name: 🚀 Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/ally-steam-patch
